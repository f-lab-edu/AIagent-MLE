# .pre-commit-config.yaml

repos:
# 1. 기본적인 Git 관련 훅 (선택사항이지만 유용함)
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0  # 여기에서 최신 버전을 확인하세요: https://github.com/pre-commit/pre-commit-hooks/releases
    hooks:
    -   id: trailing-whitespace   # 끝 공백 제거
    -   id: end-of-file-fixer     # 파일 끝에 빈 줄 추가
    -   id: check-yaml            # YAML 파일 문법 검사
    -   id: check-json            # JSON 파일 문법 검사
    # -   id: check-ast           # 파이썬 코드 문법 오류 검사 (AST 레벨)
    # -   id: check-merge-conflict # 병합 충돌 마커가 남아있는지 검사
    # -   id: debug-statements    # 디버깅 코드(pdb, breakpoint 등)가 남아있는지 검사

# 2. Black: 코드 포맷터 (가장 먼저 실행하는 것이 좋음)
-   repo: https://github.com/psf/black
    rev: 25.1.0  # 여기에서 최신 버전을 확인하세요: https://github.com/psf/black/releases
    hooks:
    -   id: black
        language_version: python3.12 # ★★★ 프로젝트에서 사용하는 파이썬 버전으로 변경하세요 ★★★

# 3. Flake8: 린터 (Black 실행 후 검사)
-   repo: https://github.com/pycqa/flake8
    rev: 7.2.0   # 여기에서 최신 버전을 확인하세요: https://github.com/pycqa/flake8/releases
    hooks:
    -   id: flake8
        language_version: python3.12 # ★★★ 프로젝트에서 사용하는 파이썬 버전으로 변경하세요 ★★★
        # 만약 프로젝트에 의존성(requirements.txt 등)이 있고,
        # Flake8이 import 에러를 잘못 잡는다면 아래처럼 의존성을 명시해 줄 수 있습니다.
        # additional_dependencies: ["django", "pytest", ...]
        # 또는 프로젝트 루트에 .flake8 설정 파일이 있다면 Flake8이 자동으로 인식합니다.
        args: [--max-line-length=120]
